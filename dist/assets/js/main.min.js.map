{"version":3,"sources":["main.js"],"names":["id1","id2","maxNumb","newChart","currentPage","document","querySelector","openSelect","intro","openCompare","addEventListener","introDisplayNone","lexique","toggleLexique","body","hasAttribute","removeAttribute","setAttribute","open","toggleSelect","innerHTML","querySelectorAll","forEach","box","classList","remove","close","toggleCompare","location","reload","listcar","fetch","then","response","json","data","tab","i","length","listimg","createElement","appendChild","choix","add","e","leftcar","currentTarget","id","rightcar","getElementById","textContent","name","year","graphArray","Graph","window","Chart","type","labels","datasets","Object","values","label","display","backgroundColor","maxBarThickness","options","plugins","legend","scales","x","grid","offset","y","GraphGenerator"],"mappings":"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","file":"main.min.js","sourcesContent":["\"use strict\";\n\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-inner-declarations */\n\n// LEXIQUE\nlet id1 = null;\nlet id2 = null;\nlet maxNumb = 0;\nlet newChart = null\n\nlet currentPage = document.querySelector(\".cta--lexique\");\nlet openSelect = document.querySelector(\".cta--changer\");\nlet intro = document.querySelector(\".cta--intro\");\nlet openCompare = document.querySelector(\".cta--comparer\");\n\nif (currentPage != null) {\n    intro.addEventListener(\"click\", introDisplayNone);\n    let lexique = document.querySelector(\".cta--lexique\");\n    lexique.addEventListener(\"click\", toggleLexique);\n\n    // //OPEN LEXIQUE\n\n    function toggleLexique() {\n        if (document.body.hasAttribute(\"data-lexique\")) {\n            document.body.removeAttribute(\"data-lexique\");\n        } else {\n            document.body.setAttribute(\"data-lexique\", true);\n        }\n    }\n}\n\nif (openSelect != null) {\n    let open = document.querySelector(\".cta--changer\");\n    open.addEventListener(\"click\", toggleSelect);\n\n    //OPEN SELECT\n    function toggleSelect() {\n        if (document.body.hasAttribute(\"data-select\")) {\n            document.body.removeAttribute(\"data-select\");\n            openSelect.innerHTML = \"Changer\";\n        } else {\n            document.body.setAttribute(\"data-select\", true);\n            openSelect.innerHTML = \"Confirmer\";\n            openSelect.setAttribute('disabled', true)\n            id1 = null;\n            id2 = null;\n            maxNumb = 0;\n\n            document.querySelectorAll('.selected').forEach((box) => {\n                box.classList.remove('selected')\n            })\n        }\n    }\n}\n\nif (openCompare != null) {\n    let open = document.querySelector(\".cta--comparer\");\n    let close = document.querySelector(\".cta--close\");\n\n    close.addEventListener(\"click\", () => {\n        document.location.reload(true);\n    })\n\n    open.addEventListener(\"click\", toggleCompare);\n\n\n    //OPEN COMPARE\n    function toggleCompare() {\n        if (document.body.hasAttribute(\"data-compare\")) {\n            document.body.removeAttribute(\"data-compare\");\n            openCompare.innerHTML = \"Comparer\";\n\n\n        } else {\n            document.body.setAttribute(\"data-compare\", true);\n\n        }\n    }\n}\n\n\n\nfunction introDisplayNone() {\n    document.body.setAttribute(\"data-intro\", true);\n}\n\n\n// JSON\n\nvar listcar = document.querySelector(\".listcar\");\n\n\nfetch(('assets/data/data.json'))\n    .then((response) => {\n        return response.json()\n    })\n    .then((data) => {\n        var tab = data;\n\n        //Boucle affichage voitures\n\n        for (var i = 0; i < data.length; i++) {\n            var listimg = document.createElement(\"img\");\n            listcar.appendChild(listimg);\n            listimg.setAttribute(\"class\", \"choix\");\n            listimg.setAttribute(\"id\", + (i + 1));\n            listimg.setAttribute(\"src\", \"assets/images/car\" + (i + 1) + \".jpg\");\n        }\n\n        // DOUBLE SELECTION\n\n        var choix = document.querySelectorAll(\".choix\");\n        for (let i = 0; i < choix.length; i++) {\n            choix[i].classList.add(i + 1)\n            choix[i].addEventListener(\"click\", (e) => {\n                if (maxNumb < 2) {\n\n                    if (id1 !== null) {\n                        id2 = e.currentTarget.id\n                    } else {\n                        id1 = e.currentTarget.id\n                    }\n                    e.currentTarget.classList.add(\"selected\")\n\n                    if (id1 !== null && id2 !== null) {\n                        openSelect.removeAttribute('disabled')\n                        var leftcar = document.querySelector(\".mustang-left\");\n                        var rightcar = document.querySelector(\".mustang-right\");\n\n                        leftcar.setAttribute(\"src\", \"assets/images/car\" + id1 + \".jpg\")\n                        leftcar.setAttribute(\"srcset\", \"assets/images/car\" + id1 + \"@2x.jpg 2x\")\n                        rightcar.setAttribute(\"src\", \"assets/images/car\" + id2 + \".jpg\")\n                        rightcar.setAttribute(\"srcset\", \"assets/images/car\" + id2 + \"@2x.jpg 2x\")\n                        document.getElementById('name-left').textContent = tab[id1 - 1].name;\n                        document.getElementById('year-left').textContent = tab[id1].year;\n                        document.getElementById('name-right').textContent = tab[id2].name;\n                        document.getElementById('year-right').textContent = tab[id2].year;\n\n                        GraphGenerator();\n                    }\n                    maxNumb += 1;\n                }\n            })\n        }\n\n        // GRAPHS GENERATOR\n        function GraphGenerator() {\n            let graphArray = document.querySelectorAll('.canvas')\n\n            for (let i = 0; i < graphArray.length; i++) {\n\n                const Graph = document.querySelector('#myChart' + [i + 1])\n                window.newChart = new Chart(Graph, {\n                    type: 'bar',\n                    data: {\n                        labels: [1, 2],\n                        datasets: [{\n                            data: [Object.values(tab[id1])[i], Object.values(tab[id2])[i]],\n                            label: {\n                                display: false\n                            },\n                            backgroundColor: [\n                                'rgba(219, 106, 68, 1)',\n                                'rgba(50 , 50, 50, 1)'],\n                            maxBarThickness: 20,\n                        }],\n                    },\n                    options: {\n                        plugins: {\n                            legend: false,\n                        },\n                        scales: {\n                            x: {\n                                display: false,\n                                grid: {\n                                    offset: false\n                                }\n                            },\n                            y: {\n                                display: false,\n                            }\n                        },\n                    }\n                })\n\n            }\n\n        }\n    })"]}